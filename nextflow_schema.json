{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/scnanoseq/master/nextflow_schema.json",
    "title": "nf-core/scnanoseq pipeline parameters",
    "description": "Single-cell/nuclei pipeline for data derived from Oxford Nanopore",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/scnanoseq/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz|\\.zip)?$",
                    "description": "Path to genome FASTA file.",
                    "help_text": "This parameter is *mandatory* if you wish to use `isoquant` as a quantifier",
                    "fa_icon": "fas fa-book-open"
                },
                "transcript_fasta": {
                    "type": "string",
                    "description": "Path to transcriptome FASTA file.",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz|\\.zip)?$",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "fa_icon": "fas fa-book-open",
                    "help_text": "This parameter is *mandatory* if you wish to use `oarfish` as a quantifier"
                },
                "gtf": {
                    "type": "string",
                    "fa_icon": "fas fa-book-open",
                    "description": "Path to GTF file.",
                    "format": "file-path",
                    "pattern": "^\\S+\\.gtf(\\.gz|\\.zip)?$"
                },
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`.",
                    "default": true
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes/"
                },
                "fasta_delimiter": {
                    "type": "string",
                    "description": "This is the delimiter the FASTA uses in the sequence identifier to separate the string."
                }
            },
            "required": ["gtf"]
        },
        "fastq_options": {
            "title": "Fastq options",
            "type": "object",
            "description": "Options related to processing fastqs",
            "default": "",
            "fa_icon": "fas fa-file",
            "properties": {
                "split_amount": {
                    "type": "integer",
                    "description": "The number of lines to split  the FASTQ into.",
                    "default": 0,
                    "fa_icon": "fas fa-cut"
                }
            }
        },
        "read_trimming_options": {
            "title": "Read trimming options",
            "type": "object",
            "description": "Options to choose trimming criteria and software.",
            "default": "",
            "properties": {
                "min_length": {
                    "type": "integer",
                    "default": 1,
                    "description": "Choose minimum read length.",
                    "fa_icon": "fas fa-cut"
                },
                "min_q_score": {
                    "type": "integer",
                    "default": 10,
                    "description": "Choose minimum average read quality score.",
                    "fa_icon": "fas fa-cut"
                },
                "skip_trimming": {
                    "type": "boolean",
                    "description": "Skip quality trimming step.",
                    "fa_icon": "fas fa-forward"
                }
            },
            "fa_icon": "fas fa-cut"
        },
        "cell_barcode_options": {
            "title": "Cell barcode options",
            "type": "object",
            "description": "Options related to the barcode and umis.",
            "default": "",
            "properties": {
                "cdna_whitelist": {
                    "type": "string",
                    "description": "User-provided file containing a list of cellular barcodes for cDNA samples. Using this parameter will override the default cDNA whitelists provided by the pipeline and use the user-provided one instead.",
                    "format": "file-path",
                    "fa_icon": "far fa-file-alt"
                },
                "dna_whitelist": {
                    "type": "string",
                    "description": "User-provided file containing a list of cellular barcodes for DNA samples. Using this parameter will override the default DNA whitelists provided by the pipeline and use the user-provided one instead.",
                    "format": "file-path",
                    "fa_icon": "far fa-file-alt"
                },
                "barcode_format": {
                    "type": "string",
                    "description": "Specify the format for the barcode+umi. This parameter also defines a default barcode whitelist for the pipeline to use for barcode calling, this can be overridden with the 'whitelist' parameter.",
                    "enum": ["10X_3v3", "10X_3v4", "10X_5v2", "10X_5v3", "10X_multiome"],
                    "fa_icon": "fas fa-barcode"
                },
                "custom_flexiplex_barcode_dna": {
                    "type": "string",
                    "description": "Custom DNA flexiplex barcode format to use. Example: '-x CTACACGACGCTCTTCCGATCT -b ???????????????? -u ???????????? -x TTTTTTTTT -f 8 -e 2'. For information on structure: https://davidsongroup.github.io/flexiplex/#usage"
                },
                "custom_flexiplex_barcode_cdna": {
                    "type": "string",
                    "description": "Custom cDNA flexiplex barcode format to use. Example: '-x CTACACGACGCTCTTCCGATCT -b ???????????????? -u ???????????? -x TTTTTTTTT -f 8 -e 2'. For information on structure: https://davidsongroup.github.io/flexiplex/#usage"
                },
                "demux_tool": {
                    "type": "string",
                    "description": "Specify which tool to be used for demultiplexing (Options: flexiplex, blaze)",
                    "enum": ["flexiplex", "blaze"]
                },
                "dedup_tool": {
                    "type": "string",
                    "description": "Specify which tool to be used for deduplication (Options: picard, umitools)",
                    "enum": ["umitools", "picard"]
                }
            },
            "fa_icon": "fas fa-microscope",
            "required": ["barcode_format", "dedup_tool"]
        },
        "mapping": {
            "title": "Mapping",
            "type": "object",
            "description": "Options related to minimap2.",
            "default": "",
            "properties": {
                "stranded": {
                    "type": "string",
                    "enum": ["None", "reverse", "forward"],
                    "description": "Library strandness option.",
                    "fa_icon": "fas fa-dna"
                },
                "kmer_size": {
                    "type": "integer",
                    "default": 14,
                    "description": "Minimizer k-mer length.",
                    "fa_icon": "fas fa-sort-amount-down"
                },
                "save_genome_secondary_alignment": {
                    "type": "boolean",
                    "description": "Save the secondary alignments when aligning to the genome"
                },
                "save_transcript_secondary_alignment": {
                    "type": "boolean",
                    "default": true,
                    "description": "Save the secondary alignments when aligning to the transcriptome"
                }
            },
            "fa_icon": "far fa-map"
        },
        "analysis_options": {
            "title": "Analysis options",
            "type": "object",
            "default": "",
            "fa_icon": "fas fa-search",
            "properties": {
                "retain_introns": {
                    "type": "boolean",
                    "default": true,
                    "description": "Indicate whether to include introns in the count matrices",
                    "fa_icon": "fas fa-filter"
                },
                "quantifier": {
                    "type": "string",
                    "description": "Provide a comma-delimited options of quantifiers for the pipeline to use. Available tools: isoquant, oarfish",
                    "pattern": "^(oarfish|isoquant)(,(oarfish|isoquant))*$"
                }
            },
            "required": ["quantifier"],
            "description": "Options related to post-mapping analysis"
        },
        "process_skipping_options": {
            "title": "Process skipping options",
            "type": "object",
            "description": "Options to skip various steps within the workflow.",
            "default": "",
            "help_text": "",
            "properties": {
                "skip_qc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip all QC."
                },
                "skip_fastqc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip FastQC."
                },
                "skip_nanoplot": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip Nanoplot."
                },
                "skip_toulligqc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip ToulligQC."
                },
                "skip_fastq_nanocomp": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip NanoComp from FASTQ file(s)."
                },
                "skip_bam_nanocomp": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip NanoComp from BAM file(s)."
                },
                "skip_rseqc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip RSeQC."
                },
                "skip_seurat": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip Seurat QC."
                },
                "skip_save_minimap2_index": {
                    "type": "boolean",
                    "description": "Skip saving minimap2 index.",
                    "fa_icon": "fas fa-forward"
                },
                "skip_dedup": {
                    "type": "boolean",
                    "description": "Skip umi dedup.",
                    "fa_icon": "fas fa-forward"
                },
                "skip_multiqc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-forward",
                    "description": "Skip MultiQC."
                }
            },
            "fa_icon": "fas fa-forward"
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/fastq_options"
        },
        {
            "$ref": "#/$defs/read_trimming_options"
        },
        {
            "$ref": "#/$defs/cell_barcode_options"
        },
        {
            "$ref": "#/$defs/mapping"
        },
        {
            "$ref": "#/$defs/analysis_options"
        },
        {
            "$ref": "#/$defs/process_skipping_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
